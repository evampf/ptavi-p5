 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura? 
	954 paquetes
 ** ¿Cuánto tiempo dura la captura?
	56,149345 segundos
 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
	IP Origen: 192.168.1.34
	Las IP Privadas están contenidas dentro de los rangos:
		- 10.0.0.0 a 10.255.255.255
		- 172.16.0.0 a 172.32.255.255
		- 192.168.0.0 a 192.168.255.255
	Por lo que la IP Origen es privada ya que está entre esos rangos.


3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
	Porcentajes: UDP - 96.2% y TCP - 2.1%, por lo que es mayor UDP
	Si, es consistente ya que RTP se encapsula sobre UDP
 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
	UDP(User Datagram Protocol), TCP(Transmission Control Protocol) e ICMP(Internet Control Message Protocol), STUN, SIP, HTTP, DNS, RTP, RTCP


4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
	Tienen lugar en los segundos:
		- Del 7’343770 al 7’648107
		- 14’426793, 14’599871, 14’610573
		- Del 16’233522 al 16’460741
		- 38’119195, 38’362673, 38’937875
		- Del 39¡154151 al 39’229683
		- Del 55’69437 al 55’859934
 ** Y los paquetes con RTP, ¿cuándo se envían?
	Se envían desde el segundo 17’169770 al segundo 38’119177


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas?
	DNS
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
	80.58.61.250
 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
	86.64.162.35
 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
	Para realizar el DNS inverso. La dir IP es igual que el servicio de nombres pero al revés.
	


6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
	http://ekiga.net/ip/
 ** ¿Qué user agent (UA) la está pidiendo?
	Ekiga\r\n
 ** ¿Qué devuelve el servidor?
	Devuelve la dir IP 83.36.48.212
 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
	Recibimos un dir IP (92.190.198.228). Nos está devolviendo una dir IP pública


7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
	Porque el cliente (con dir IP: 192.168.1.34) quiere saber su dir IP Pública
 ** ¿Estamos tras un NAT?
	Si, ya que STUN nos permite hallar la dirección pública de un servidor NAT fuera de nuestra red local.


8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
	DirIP: 86.64.162.35
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
	Src Port: 5063, Dst Port: 5060
 ** ¿Qué método SIP utiliza el UA para registrarse?
	Method: RESGISTER
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
	INVITE, ACK, BYE, CANCEL, OPTIONS, NOTIFY, REFER Y MESSAGE



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
	No, podemos ver en la trama 50 un mensaje “401 Unauthorized” que nos indica que no se ha registrado.
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
	Lo podemos ver en la trama 54 con el mensaje “200 OK”
 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
	Porque primero tiene que realizar un servicio de autenticación del servidor. El tamaño es mayor porque el proceso de autenticación ocupa más espacio.
 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
	3600 segundos


10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
	Nombre: “Gregorio Robles”
	Dir SIP: sip:grex@ekiga.net
 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
	Protocolo: SDP
	v=0
    	o=- 1168390274 1168390274 IN IP4 83.36.48.212
   	s=Opal SIP Session
   	c=IN IP4 83.36.48.212
    	t=0 0
    	m=audio 5002 RTP/AVP 101 96 3 107 110 0 8
    	a=rtpmap:101 telephone-event/8000
    	a=fmtp:101 0-15
    	a=rtpmap:96 SPEEX/16000
    	a=rtpmap:3 GSM/8000
    	a=rtpmap:107 MS-GSM/8000
    	a=rtpmap:110 SPEEX/8000
    	a=rtpmap:0 PCMU/8000
    	a=rtpmap:8 PCMA/8000
    	m=video 5006 RTP/AVP 31
    	a=rtpmap:31 H261/90000

 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
	No, al igual que en REGISTER también tiene un proceso de autenticación por lo que vemos el mensaje: 407 Proxy Authentication Required

 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
	En el segundo intento ya viene la resolución de Digest entre servidor y cliente.

11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
	RTP: Transmisión de tráfico multimedia en tiempo real
	H.261:  Comprensor de vídeo
	RTCP: Proporciona información sobre la calidad de la información

 ** ¿Cuál es el tamaño de paquete de los mismos?
	RTP: 214
	H.621 y RTCP varía el tamaño dependiendo del paquete
 ** ¿Se utilizan bits de padding?
	No. 
	..0 …. = Padding: false
 ** ¿Cuál es la periodicidad de los paquetes que se envían?
	Sabemos que usa un decodificador G.711 y que este usa una velocidad de transmisión de 64kbps.
	Sabemos también que la carga útil son 160 bytes, por lo que el periodo es:
		64000/(8*160) = 1/50 segundos
 ** ¿Cuántos bits/segundo estamos enviando?
	64000 bps



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
	Dos flujos: h.261 y g.711
	Hay dos porque h.261 es de audio y g.711 video y se envían por separado.
 ** ¿Cuántos paquetes se pierden?
	Ninguno
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
	1290,44 ms 
	Diferencia entre la llegada de el parque y la llegada del paquete anterior. 
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
	El jitter es la variabilidad temporal entre un mensaje y otro.
	Valor max de Jitter: 119,64 ms


13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
	Tanto la delta como el jitter tienen valor 0.
 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
	Si, en el Marker nos indica un True, por lo que podemos decir que es el primer paquete.
 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
	Hasta el paquete 247
 ** ¿A qué se debe el cambio tan brusco del jitter?
	A que aumenta el valor de la delta y, por lo tanto, el del jitter
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
	Si, debido a que la delta es la diferencia entre la llegada de este paquete y del anterior, cuánto mayor sea la delta mayor será el jitter.
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
	Cuando el tiempo que pasa entre el paquete actual y el anterior aumenta, también lo hace el jitter.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?
	Dura 24,80289 segundos
 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
	Tiene dos SSRC: 
		RTP(H.261)
		RTP(G.711)
	Hay dos ya que hemos visto antes que hay dos flujos.
	No hay CSRCs.

15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
	BYE
 ** ¿En qué trama(s)?
	En las tramas 924,925,927 y 933
 ** ¿Por qué crees que se envía varias veces?
	Porque así se asegura de que los paquetes llegan.


16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
	Para dar de baja al usuario.
 ** ¿En qué trama sucede esto?
	Trama 950
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
	El valor de Expires es 0 segundos, mientras que al principio hemos visto que era 3600 segundos.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
	No, porque el servidor está dentro de nuestra área local.
 ** ¿Son diferentes el registro y la descripción de la sesión?
	Si, porque SIP permite más cosas como: INFO, PING, PRACK, SUBSCRIBE…
	

18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
	Dos, uno en dirección de ida y otro en dirección de vuelta.
 ** ¿Cuál es su periodicidad?
	La misma que en nuestra captura, 0.02 segundos
	
 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
	Foward: Max Delta: 63,87 ms
		Mean Jitter: 1,45 ms
		Max Jitter: 7,67 ms
	Reverse: Max Delta: 230,04 ms
		Mean Jitter: 38,9 ms
		Max Jitter: 45.6 ms
 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
	Telephony < VoIPCalls - Play - Decode
 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?
	Música en tiempo real.



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
